var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,0.871,1,1.646]],["body/controllers/AppController.html",[0,1.329,1,2.512,2,1.038,3,0.515,4,0.433,5,0.433,6,2.689,7,0.699,8,1.506,9,4.004,10,1.962,11,0.048,12,1.176,13,3.321,14,1.176,15,1.93,16,0.773,17,0.515,18,2.129,19,2.689,20,0.515,21,0.604,22,2.689,23,1.331,24,1.176,25,3.321,26,0.028,27,0.036,28,0.028]],["title/modules/AppModule.html",[29,0.673,30,1.646]],["body/modules/AppModule.html",[1,2.423,2,1.112,3,0.395,4,0.332,5,0.332,11,0.048,16,0.88,17,0.395,18,2.198,19,2.06,20,0.395,21,0.463,26,0.022,27,0.03,28,0.022,29,0.99,30,3.145,31,0.901,32,1.019,33,1.313,34,1.313,35,1.019,36,2.117,37,1.313,38,2.06,39,2.06,40,2.06,41,2.499,42,2.499,43,2.499,44,1.836,45,1.313,46,1.313,47,2.544,48,3.556,49,2.544,50,2.544,51,2.544,52,2.544]],["title/injectables/AppService.html",[18,1.264,53,0.871]],["body/injectables/AppService.html",[3,0.547,4,0.459,5,0.459,7,0.741,8,1.563,9,4.091,11,0.047,12,1.247,14,1.247,15,2.003,16,0.64,17,0.547,18,2.003,20,0.547,21,0.64,24,1.247,26,0.03,27,0.038,28,0.03,53,1.38,54,1.818,55,2.852,56,3.521,57,3.521,58,3.521]],["title/interfaces/AuthBody.html",[59,1.646,60,1.437]],["body/interfaces/AuthBody.html",[3,0.529,4,0.445,5,0.445,7,0.718,11,0.046,15,2.39,20,0.529,26,0.029,27,0.037,28,0.029,59,2.014,60,2.232,61,3.409,62,2.761,63,4.323,64,4.993,65,4.993,66,4.993,67,1.485,68,4.748]],["title/controllers/AuthenticationController.html",[0,0.871,69,1.646]],["body/controllers/AuthenticationController.html",[0,0.799,2,0.799,3,0.396,4,0.333,5,0.333,7,0.538,8,1.263,10,2.107,11,0.048,12,1.263,14,1.263,16,0.747,17,0.396,20,0.396,21,0.464,23,1.023,24,1.263,26,0.022,27,0.031,28,0.022,60,2.568,67,1.115,69,2.107,70,2.068,71,1.748,72,3.566,73,3.925,74,2.888,75,2.888,76,2.068,77,3.566,78,2.554,79,1.619,80,1.619,81,1.619,82,2.888,83,3.044,84,2.068,85,3.566,86,2.554,87,2.888,88,1.748,89,2.068,90,2.068,91,1.619,92,2.068,93,2.554,94,1.318,95,1.318,96,2.554,97,2.554,98,2.554,99,2.554]],["title/modules/AuthenticationModule.html",[29,0.673,41,1.437]],["body/modules/AuthenticationModule.html",[2,1.217,3,0.45,4,0.378,5,0.378,11,0.048,16,0.89,17,0.45,20,0.45,21,0.527,26,0.025,27,0.033,28,0.025,29,1.06,31,1.027,32,1.162,33,1.497,34,1.497,35,1.162,36,2.266,37,1.497,41,2.6,44,2.008,45,1.497,46,1.497,69,2.594,91,2.287,92,2.349,100,2.349,101,2.349,102,2.9,103,2.9,104,1.217,105,1.317,106,2.663,107,2.9,108,1.985,109,1.985]],["title/injectables/AuthenticationService.html",[53,0.871,91,1.264]],["body/injectables/AuthenticationService.html",[3,0.332,4,0.279,5,0.279,7,0.45,8,1.111,11,0.048,12,1.452,14,1.317,16,0.794,17,0.332,20,0.332,21,0.389,23,0.856,24,1.111,26,0.018,27,0.027,28,0.018,53,0.981,54,1.103,60,2.436,67,1.163,73,3.697,74,2.541,75,2.541,76,2.541,79,1.861,80,1.861,81,1.861,82,2.541,83,2.806,84,2.541,87,2.541,90,1.73,91,1.425,94,1.62,95,2.116,104,0.981,105,0.97,110,1.73,111,3.138,112,2.137,113,2.806,114,2.137,115,3.138,116,3.138,117,2.137,118,2.137,119,2.137,120,2.137,121,2.137,122,1.463,123,2.541,124,3.138,125,1.103,126,1.73,127,2.137,128,3.138,129,2.541,130,3.138,131,2.137,132,1.73,133,1.263,134,2.137,135,2.137,136,2.137,137,1.73]],["title/modules/CoreModule.html",[29,0.673,138,1.906]],["body/modules/CoreModule.html",[3,0.61,4,0.513,5,0.513,11,0.046,16,0.715,17,0.61,20,0.61,21,0.715,26,0.034,27,0.04,28,0.034,29,1.14,31,1.392,138,3.232,139,3.932]],["title/controllers/IngredientsController.html",[0,0.871,140,1.646]],["body/controllers/IngredientsController.html",[0,0.74,2,0.74,3,0.367,4,0.308,5,0.308,7,0.498,8,1.196,10,1.398,11,0.049,12,0.838,14,1.196,16,0.717,17,0.367,20,0.524,21,0.614,23,0.948,24,0.838,26,0.02,27,0.029,28,0.02,67,0.74,71,1.619,79,1.074,80,1.074,81,1.074,94,1.221,95,1.221,125,1.744,140,2.794,141,1.915,142,2.697,143,0.948,144,1.996,145,2.736,146,2.736,147,2.736,148,1.744,149,4.299,150,3.378,151,2.365,152,4.03,153,2.365,154,2.736,155,2.736,156,2.736,157,1.915,158,1.789,159,1.915,160,1.619,161,2.365,162,1.619,163,1.398,164,1.996,165,1.996,166,2.365,167,2.365]],["title/modules/IngredientsModule.html",[29,0.673,42,1.437]],["body/modules/IngredientsModule.html",[2,1.144,3,0.411,4,0.345,5,0.345,11,0.048,16,0.862,17,0.411,20,0.568,21,0.665,26,0.023,27,0.031,28,0.023,29,1.012,31,0.938,32,1.061,33,1.367,34,1.367,35,1.061,36,2.163,37,1.367,42,2.594,44,1.888,45,1.367,46,1.367,104,1.144,105,1.202,108,1.813,109,1.813,140,2.476,142,2.504,143,1.061,158,2.226,159,2.145,168,2.145,169,2.145,170,2.649,171,2.962,172,2.962,173,2.504,174,2.649,175,2.504,176,2.649]],["title/injectables/IngredientsService.html",[53,0.871,158,1.264]],["body/injectables/IngredientsService.html",[3,0.347,4,0.291,5,0.291,7,0.47,8,1.148,11,0.049,12,1.148,14,1.148,15,1.901,16,0.694,17,0.347,20,0.503,21,0.589,23,0.895,24,0.791,26,0.019,27,0.028,28,0.019,53,1.014,54,1.153,67,1.014,79,1.472,80,1.472,81,1.472,94,1.673,95,1.153,104,1.014,105,1.014,113,3.043,122,1.529,125,1.673,126,1.809,142,3.043,143,0.895,144,1.915,148,1.673,158,2.172,162,2.219,163,1.915,164,1.915,165,1.915,177,1.809,178,3.242,179,2.219,180,2.219,181,1.809,182,2.625,183,2.233,184,2.233,185,2.625,186,2.233,187,3.242,188,3.09,189,2.233,190,1.809,191,1.809,192,2.233,193,2.233]],["title/controllers/OrdersController.html",[0,0.871,194,1.646]],["body/controllers/OrdersController.html",[0,0.545,2,0.545,3,0.27,4,0.227,5,0.227,7,0.367,8,0.953,10,1.943,11,0.048,12,1.164,14,1.496,16,0.598,17,0.27,20,0.418,21,0.489,22,1.411,23,0.698,24,1.164,26,0.015,27,0.023,28,0.015,67,1.028,71,1.192,79,1.492,80,1.492,81,1.492,88,2.25,89,2.179,125,1.389,133,1.59,143,0.698,144,1.59,145,2.179,146,2.179,147,2.179,148,1.389,152,4.315,154,3.421,155,3.421,156,2.994,157,1.411,160,1.192,164,2.185,165,1.943,194,2.496,195,1.411,196,3.113,197,2.691,198,2.691,199,2.179,200,1.742,201,2.691,202,1.742,203,1.742,204,2.691,205,1.742,206,2.179,207,2.179,208,1.742,209,3.996,210,1.742,211,2.691,212,1.842,213,1.222,214,1.411,215,1.742,216,1.742,217,1.742,218,1.742,219,1.742,220,1.742,221,1.742,222,1.742]],["title/modules/OrdersModule.html",[29,0.673,43,1.437]],["body/modules/OrdersModule.html",[2,1.144,3,0.411,4,0.345,5,0.345,11,0.048,16,0.862,17,0.411,20,0.568,21,0.665,26,0.023,27,0.031,28,0.023,29,1.012,31,0.938,32,1.061,33,1.367,34,1.367,35,1.061,36,2.163,37,1.367,43,2.594,44,1.888,45,1.367,46,1.367,104,1.144,105,1.202,108,1.813,109,1.813,143,1.061,171,2.962,172,2.962,173,2.504,194,2.476,196,2.504,213,2.226,214,2.145,223,2.145,224,2.145,225,2.649,226,2.649,227,2.504,228,2.649]],["title/injectables/OrdersService.html",[53,0.871,213,1.264]],["body/injectables/OrdersService.html",[3,0.229,4,0.192,5,0.192,7,0.31,8,0.835,11,0.049,12,1.194,14,1.393,15,2.258,16,0.536,17,0.229,20,0.366,21,0.429,23,0.591,24,1.044,26,0.013,27,0.02,28,0.013,53,0.738,54,0.761,67,1.054,79,1.531,80,1.531,81,1.531,83,3.031,88,1.009,94,0.761,95,0.761,104,1.153,105,0.669,113,2.525,122,1.009,123,1.193,125,1.218,129,2.389,132,2.389,133,2.18,137,2.389,143,0.591,144,1.394,148,1.218,162,1.615,163,1.394,164,2.325,165,1.992,179,1.615,180,1.615,181,1.193,182,1.91,185,1.91,188,3.586,190,2.389,191,2.389,196,2.308,199,1.91,206,1.91,207,1.91,212,3.031,213,2.01,229,1.193,230,2.359,231,1.474,232,1.474,233,1.474,234,2.359,235,3.935,236,1.474,237,2.359,238,1.474,239,2.359,240,1.474,241,2.95,242,2.95,243,2.95,244,2.95,245,1.474,246,1.474]],["title/coverage.html",[247,2.591]],["body/coverage.html",[0,1.418,1,1.578,5,0.348,6,2.163,11,0.047,18,1.212,26,0.023,27,0.031,28,0.023,35,1.07,53,1.418,55,2.163,59,1.578,60,1.379,62,2.163,67,0.835,69,1.578,70,2.163,91,1.212,104,0.835,106,1.828,110,2.163,133,1.578,140,1.578,141,2.163,158,1.212,175,1.828,177,2.163,194,1.578,195,2.163,213,1.212,227,1.828,229,2.163,247,1.828,248,2.671,249,2.671,250,2.671,251,5.131,252,3.679,253,2.163,254,4.534,255,4.208,256,2.671,257,2.671,258,2.671,259,2.163,260,2.163,261,4.915,262,3.679,263,2.671,264,2.671,265,2.163,266,2.671,267,2.163,268,2.671,269,2.671,270,2.671,271,2.671]],["title/dependencies.html",[32,1.34,272,2.333]],["body/dependencies.html",[11,0.048,17,0.559,26,0.031,27,0.038,28,0.031,32,1.443,104,1.126,160,2.465,273,4.474,274,3.601,275,3.601,276,3.601,277,3.601,278,3.601,279,3.601,280,3.601,281,3.601,282,3.601,283,3.601,284,3.601,285,3.601,286,3.601,287,3.601,288,2.916,289,3.601]],["title/miscellaneous/functions.html",[290,1.379,291,2.709]],["body/miscellaneous/functions.html",[7,0.87,11,0.042,26,0.035,27,0.042,28,0.035,35,2.071,265,3.348,290,2.443,291,3.348,292,4.135]],["title/index.html",[7,0.491,293,2.333,294,2.333]],["body/index.html",[4,0.343,11,0.045,26,0.022,27,0.031,28,0.022,143,1.053,173,1.798,247,1.798,288,2.127,295,2.627,296,2.627,297,3.637,298,2.627,299,2.627,300,2.627,301,2.627,302,2.627,303,2.627,304,2.627,305,2.627,306,2.627,307,4.171,308,2.627,309,2.627,310,2.627,311,4.171,312,5.014,313,2.627,314,2.627,315,2.627,316,4.89,317,2.627,318,2.627,319,3.637,320,2.627,321,2.627,322,2.627,323,4.171,324,2.627,325,3.637,326,2.627,327,2.627,328,2.627,329,2.945,330,3.637,331,3.637,332,2.627,333,2.627,334,2.627,335,2.627,336,2.627,337,2.627,338,2.627,339,2.627,340,2.627,341,2.627,342,2.627,343,2.627,344,2.627,345,2.627,346,2.627,347,2.627,348,2.627,349,2.627,350,2.627,351,2.627,352,2.627,353,2.627,354,2.627]],["title/modules.html",[31,1.34]],["body/modules.html",[11,0.039,26,0.032,27,0.039,28,0.032,30,2.202,31,1.319,41,1.923,42,1.923,43,1.923,138,2.55,329,4.173,355,5.154,356,5.154,357,5.289,358,3.726,359,3.726]],["title/overview.html",[360,3.065]],["body/overview.html",[2,0.911,11,0.045,18,1.998,26,0.025,27,0.033,28,0.025,29,0.704,30,3.166,31,1.032,32,1.167,33,1.504,34,1.504,35,1.167,36,1.504,37,1.504,38,2.359,39,2.359,40,2.359,41,2.53,42,2.53,43,2.53,44,2.014,45,1.504,46,1.504,54,1.504,59,1.722,91,1.998,100,2.359,101,2.359,158,1.998,168,2.359,169,2.359,213,1.998,223,2.359,224,2.359,360,2.359,361,2.913,362,3.902,363,2.913]],["title/miscellaneous/variables.html",[290,1.379,364,2.709]],["body/miscellaneous/variables.html",[7,0.649,11,0.046,15,1.399,26,0.026,27,0.035,28,0.026,67,0.964,104,1.561,106,2.772,148,2.091,163,2.393,175,2.772,179,2.772,180,2.772,212,2.109,227,2.772,253,2.495,259,2.495,260,2.495,267,2.495,290,1.821,364,2.495,365,3.081,366,3.081,367,3.081,368,3.081,369,4.806,370,4.806,371,4.525,372,4.525,373,3.081,374,3.081,375,4.05,376,3.081,377,3.081]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/AuthBody.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"controllers/IngredientsController.html":{},"modules/IngredientsModule.html":{},"injectables/IngredientsService.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":251,"title":{},"body":{"coverage.html":{}}}],["0.1.12",{"_index":280,"title":{},"body":{"dependencies.html":{}}}],["0.18.0",{"_index":277,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":255,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":252,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":256,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":258,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":257,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":363,"title":{},"body":{"overview.html":{}}}],["1/1",{"_index":262,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":261,"title":{},"body":{"coverage.html":{}}}],["2.6.2",{"_index":282,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":263,"title":{},"body":{"coverage.html":{}}}],["3.0.1",{"_index":289,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":276,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":264,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":362,"title":{},"body":{"overview.html":{}}}],["4.0.5",{"_index":287,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":268,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":361,"title":{},"body":{"overview.html":{}}}],["5.4.0",{"_index":273,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":269,"title":{},"body":{"coverage.html":{}}}],["6.2.2",{"_index":284,"title":{},"body":{"dependencies.html":{}}}],["aggregates",{"_index":171,"title":{},"body":{"modules/IngredientsModule.html":{},"modules/OrdersModule.html":{}}}],["amazing",{"_index":337,"title":{},"body":{"index.html":{}}}],["angular",{"_index":306,"title":{},"body":{"index.html":{}}}],["api",{"_index":125,"title":{},"body":{"injectables/AuthenticationService.html":{},"controllers/IngredientsController.html":{},"injectables/IngredientsService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["app",{"_index":173,"title":{},"body":{"modules/IngredientsModule.html":{},"modules/OrdersModule.html":{},"index.html":{}}}],["app.controller",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":303,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":30,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["auth",{"_index":191,"title":{},"body":{"injectables/IngredientsService.html":{},"injectables/OrdersService.html":{}}}],["authbody",{"_index":60,"title":{"interfaces/AuthBody.html":{}},"body":{"interfaces/AuthBody.html":{},"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"coverage.html":{}}}],["authenticaiton",{"_index":115,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authentication",{"_index":72,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["authentication.axios",{"_index":107,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["authentication.controller",{"_index":103,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["authentication.service",{"_index":92,"title":{},"body":{"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{}}}],["authentication.types",{"_index":90,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{}}}],["authentication/authentication.module",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["authenticationaxios",{"_index":106,"title":{},"body":{"modules/AuthenticationModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authenticationcontroller",{"_index":69,"title":{"controllers/AuthenticationController.html":{}},"body":{"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"coverage.html":{}}}],["authenticationmodule",{"_index":41,"title":{"modules/AuthenticationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules.html":{},"overview.html":{}}}],["authenticationservice",{"_index":91,"title":{"injectables/AuthenticationService.html":{}},"body":{"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"coverage.html":{},"overview.html":{}}}],["authenticationtoken",{"_index":188,"title":{},"body":{"injectables/IngredientsService.html":{},"injectables/OrdersService.html":{}}}],["author",{"_index":347,"title":{},"body":{"index.html":{}}}],["available",{"_index":359,"title":{},"body":{"modules.html":{}}}],["axios",{"_index":104,"title":{},"body":{"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"modules/IngredientsModule.html":{},"injectables/IngredientsService.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["axios.create",{"_index":371,"title":{},"body":{"miscellaneous/variables.html":{}}}],["axiosinstance",{"_index":113,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/IngredientsService.html":{},"injectables/OrdersService.html":{}}}],["backers",{"_index":338,"title":{},"body":{"index.html":{}}}],["baseurl",{"_index":372,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bash",{"_index":311,"title":{},"body":{"index.html":{}}}],["body",{"_index":89,"title":{},"body":{"controllers/AuthenticationController.html":{},"controllers/OrdersController.html":{}}}],["boolean",{"_index":68,"title":{},"body":{"interfaces/AuthBody.html":{}}}],["bootstrap",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/IngredientsModule.html":{},"modules/OrdersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":357,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":355,"title":{},"body":{"modules.html":{}}}],["building",{"_index":298,"title":{},"body":{"index.html":{}}}],["catch((error",{"_index":243,"title":{},"body":{"injectables/OrdersService.html":{}}}],["catch(this.handleerror",{"_index":130,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["class",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"controllers/IngredientsController.html":{},"modules/IngredientsModule.html":{},"injectables/IngredientsService.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{}}}],["cluster_appmodule",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authenticationmodule",{"_index":100,"title":{},"body":{"modules/AuthenticationModule.html":{},"overview.html":{}}}],["cluster_authenticationmodule_providers",{"_index":101,"title":{},"body":{"modules/AuthenticationModule.html":{},"overview.html":{}}}],["cluster_ingredientsmodule",{"_index":168,"title":{},"body":{"modules/IngredientsModule.html":{},"overview.html":{}}}],["cluster_ingredientsmodule_providers",{"_index":169,"title":{},"body":{"modules/IngredientsModule.html":{},"overview.html":{}}}],["cluster_ordersmodule",{"_index":223,"title":{},"body":{"modules/OrdersModule.html":{},"overview.html":{}}}],["cluster_ordersmodule_providers",{"_index":224,"title":{},"body":{"modules/OrdersModule.html":{},"overview.html":{}}}],["communication",{"_index":179,"title":{},"body":{"injectables/IngredientsService.html":{},"injectables/OrdersService.html":{},"miscellaneous/variables.html":{}}}],["config",{"_index":124,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["config.api_base_url}/ingredients.json",{"_index":374,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config.api_base_url}/orders.json",{"_index":377,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configured",{"_index":375,"title":{},"body":{"miscellaneous/variables.html":{}}}],["constructor",{"_index":94,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"controllers/IngredientsController.html":{},"injectables/IngredientsService.html":{},"injectables/OrdersService.html":{}}}],["constructor(@inject(axios",{"_index":240,"title":{},"body":{"injectables/OrdersService.html":{}}}],["constructor(authenticaiton",{"_index":112,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["constructor(axios",{"_index":231,"title":{},"body":{"injectables/OrdersService.html":{}}}],["constructor(ingredients",{"_index":183,"title":{},"body":{"injectables/IngredientsService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/OrdersController.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthenticationController.html":{},"controllers/IngredientsController.html":{},"controllers/OrdersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthenticationController.html":{},"controllers/IngredientsController.html":{},"controllers/OrdersController.html":{},"coverage.html":{}}}],["controller('authentication",{"_index":93,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["controller('ingredients",{"_index":161,"title":{},"body":{"controllers/IngredientsController.html":{}}}],["controller('orders",{"_index":215,"title":{},"body":{"controllers/OrdersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"controllers/IngredientsController.html":{},"modules/IngredientsModule.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"overview.html":{}}}],["core/tokens",{"_index":105,"title":{},"body":{"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"modules/IngredientsModule.html":{},"injectables/IngredientsService.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{}}}],["coremodule",{"_index":138,"title":{"modules/CoreModule.html":{}},"body":{"modules/CoreModule.html":{},"modules.html":{}}}],["coverage",{"_index":247,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["creates",{"_index":162,"title":{},"body":{"controllers/IngredientsController.html":{},"injectables/IngredientsService.html":{},"injectables/OrdersService.html":{}}}],["declarations",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/IngredientsModule.html":{},"modules/OrdersModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthenticationController.html":{},"controllers/IngredientsController.html":{},"controllers/OrdersController.html":{}}}],["default",{"_index":369,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"controllers/IngredientsController.html":{},"injectables/IngredientsService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["defining",{"_index":145,"title":{},"body":{"controllers/IngredientsController.html":{},"controllers/OrdersController.html":{}}}],["dependencies",{"_index":32,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/IngredientsModule.html":{},"modules/OrdersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":143,"title":{},"body":{"controllers/IngredientsController.html":{},"modules/IngredientsModule.html":{},"injectables/IngredientsService.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"index.html":{}}}],["development",{"_index":315,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":248,"title":{},"body":{"coverage.html":{}}}],["e2e",{"_index":326,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":299,"title":{},"body":{"index.html":{}}}],["email",{"_index":64,"title":{},"body":{"interfaces/AuthBody.html":{}}}],["equalto",{"_index":246,"title":{},"body":{"injectables/OrdersService.html":{}}}],["error",{"_index":118,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["error.message",{"_index":136,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["error.response.data",{"_index":134,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["error.response.status",{"_index":137,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/OrdersService.html":{}}}],["example",{"_index":181,"title":{},"body":{"injectables/IngredientsService.html":{},"injectables/OrdersService.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/AuthBody.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"controllers/IngredientsController.html":{},"modules/IngredientsModule.html":{},"injectables/IngredientsService.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{}}}],["exports",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/IngredientsModule.html":{},"modules/OrdersModule.html":{},"overview.html":{}}}],["express",{"_index":160,"title":{},"body":{"controllers/IngredientsController.html":{},"controllers/OrdersController.html":{},"dependencies.html":{}}}],["fetching",{"_index":156,"title":{},"body":{"controllers/IngredientsController.html":{},"controllers/OrdersController.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/AuthBody.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"controllers/IngredientsController.html":{},"modules/IngredientsModule.html":{},"injectables/IngredientsService.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"coverage.html":{}}}],["firebase",{"_index":180,"title":{},"body":{"injectables/IngredientsService.html":{},"injectables/OrdersService.html":{},"miscellaneous/variables.html":{}}}],["framework",{"_index":297,"title":{},"body":{"index.html":{}}}],["function",{"_index":266,"title":{},"body":{"coverage.html":{}}}],["functionality",{"_index":172,"title":{},"body":{"modules/IngredientsModule.html":{},"modules/OrdersModule.html":{}}}],["functions",{"_index":291,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get('all",{"_index":201,"title":{},"body":{"controllers/OrdersController.html":{}}}],["get('byuser",{"_index":204,"title":{},"body":{"controllers/OrdersController.html":{}}}],["getall",{"_index":182,"title":{},"body":{"injectables/IngredientsService.html":{},"injectables/OrdersService.html":{}}}],["getall(authenticationtoken",{"_index":185,"title":{},"body":{"injectables/IngredientsService.html":{},"injectables/OrdersService.html":{}}}],["getallingredients",{"_index":150,"title":{},"body":{"controllers/IngredientsController.html":{}}}],["getallingredients(@req",{"_index":166,"title":{},"body":{"controllers/IngredientsController.html":{}}}],["getallingredients(request",{"_index":151,"title":{},"body":{"controllers/IngredientsController.html":{}}}],["getallorders",{"_index":197,"title":{},"body":{"controllers/OrdersController.html":{}}}],["getallorders(@req",{"_index":216,"title":{},"body":{"controllers/OrdersController.html":{}}}],["getallorders(request",{"_index":200,"title":{},"body":{"controllers/OrdersController.html":{}}}],["getbyuser",{"_index":230,"title":{},"body":{"injectables/OrdersService.html":{}}}],["getbyuser(authenticationtoken",{"_index":234,"title":{},"body":{"injectables/OrdersService.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getordersbyuser",{"_index":198,"title":{},"body":{"controllers/OrdersController.html":{}}}],["getordersbyuser(@req",{"_index":218,"title":{},"body":{"controllers/OrdersController.html":{}}}],["getordersbyuser(request",{"_index":203,"title":{},"body":{"controllers/OrdersController.html":{}}}],["gets",{"_index":187,"title":{},"body":{"injectables/IngredientsService.html":{}}}],["getting",{"_index":293,"title":{"index.html":{}},"body":{}}],["graph",{"_index":358,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":334,"title":{},"body":{"index.html":{}}}],["handleerror",{"_index":111,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["handleerror(error",{"_index":116,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["handles",{"_index":154,"title":{},"body":{"controllers/IngredientsController.html":{},"controllers/OrdersController.html":{}}}],["handling",{"_index":146,"title":{},"body":{"controllers/IngredientsController.html":{},"controllers/OrdersController.html":{}}}],["heavily",{"_index":304,"title":{},"body":{"index.html":{}}}],["hello",{"_index":57,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":344,"title":{},"body":{"index.html":{}}}],["httpexception",{"_index":123,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/OrdersService.html":{}}}],["httpexception(error.message",{"_index":244,"title":{},"body":{"injectables/OrdersService.html":{}}}],["https://nestjs.com",{"_index":351,"title":{},"body":{"index.html":{}}}],["https://www.googleapis.com/identitytoolkit/v3/relyingparty",{"_index":373,"title":{},"body":{"miscellaneous/variables.html":{}}}],["identifier",{"_index":249,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"controllers/IngredientsController.html":{},"modules/IngredientsModule.html":{},"injectables/IngredientsService.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{}}}],["imports",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/AuthBody.html":{},"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"controllers/IngredientsController.html":{},"injectables/IngredientsService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/AuthBody.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"controllers/IngredientsController.html":{},"modules/IngredientsModule.html":{},"injectables/IngredientsService.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{}}}],["ingredieng",{"_index":376,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ingrediengs",{"_index":149,"title":{},"body":{"controllers/IngredientsController.html":{}}}],["ingredient",{"_index":178,"title":{},"body":{"injectables/IngredientsService.html":{}}}],["ingredients",{"_index":142,"title":{},"body":{"controllers/IngredientsController.html":{},"modules/IngredientsModule.html":{},"injectables/IngredientsService.html":{}}}],["ingredients.axios",{"_index":176,"title":{},"body":{"modules/IngredientsModule.html":{}}}],["ingredients.controller",{"_index":174,"title":{},"body":{"modules/IngredientsModule.html":{}}}],["ingredients.service",{"_index":159,"title":{},"body":{"controllers/IngredientsController.html":{},"modules/IngredientsModule.html":{}}}],["ingredients/ingredients.module",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["ingredientsaxios",{"_index":175,"title":{},"body":{"modules/IngredientsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ingredientscontroller",{"_index":140,"title":{"controllers/IngredientsController.html":{}},"body":{"controllers/IngredientsController.html":{},"modules/IngredientsModule.html":{},"coverage.html":{}}}],["ingredientsmodule",{"_index":42,"title":{"modules/IngredientsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/IngredientsModule.html":{},"modules.html":{},"overview.html":{}}}],["ingredientsservice",{"_index":158,"title":{"injectables/IngredientsService.html":{}},"body":{"controllers/IngredientsController.html":{},"modules/IngredientsModule.html":{},"injectables/IngredientsService.html":{},"coverage.html":{},"overview.html":{}}}],["inject",{"_index":122,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/IngredientsService.html":{},"injectables/OrdersService.html":{}}}],["inject(axios",{"_index":126,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/IngredientsService.html":{}}}],["injectable",{"_index":53,"title":{"injectables/AppService.html":{},"injectables/AuthenticationService.html":{},"injectables/IngredientsService.html":{},"injectables/OrdersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthenticationService.html":{},"injectables/IngredientsService.html":{},"injectables/OrdersService.html":{},"coverage.html":{}}}],["injectables",{"_index":54,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthenticationService.html":{},"injectables/IngredientsService.html":{},"injectables/OrdersService.html":{},"overview.html":{}}}],["inspired",{"_index":305,"title":{},"body":{"index.html":{}}}],["install",{"_index":313,"title":{},"body":{"index.html":{}}}],["installation",{"_index":310,"title":{},"body":{"index.html":{}}}],["instance",{"_index":163,"title":{},"body":{"controllers/IngredientsController.html":{},"injectables/IngredientsService.html":{},"injectables/OrdersService.html":{},"miscellaneous/variables.html":{}}}],["interface",{"_index":59,"title":{"interfaces/AuthBody.html":{}},"body":{"interfaces/AuthBody.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":61,"title":{},"body":{"interfaces/AuthBody.html":{}}}],["join",{"_index":340,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":348,"title":{},"body":{"index.html":{}}}],["legend",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/IngredientsModule.html":{},"modules/OrdersModule.html":{},"overview.html":{}}}],["license",{"_index":354,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":331,"title":{},"body":{"index.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/AuthBody.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"controllers/IngredientsController.html":{},"modules/IngredientsModule.html":{},"injectables/IngredientsService.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["memberof",{"_index":165,"title":{},"body":{"controllers/IngredientsController.html":{},"injectables/IngredientsService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["message",{"_index":135,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["metadata",{"_index":279,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"controllers/IngredientsController.html":{},"injectables/IngredientsService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["miscellaneous",{"_index":290,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":330,"title":{},"body":{"index.html":{}}}],["mode",{"_index":319,"title":{},"body":{"index.html":{}}}],["module",{"_index":29,"title":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/CoreModule.html":{},"modules/IngredientsModule.html":{},"modules/OrdersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/CoreModule.html":{},"modules/IngredientsModule.html":{},"modules/OrdersModule.html":{},"overview.html":{}}}],["modules",{"_index":31,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/CoreModule.html":{},"modules/IngredientsModule.html":{},"modules/OrdersModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":343,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":349,"title":{},"body":{"index.html":{}}}],["name",{"_index":80,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"controllers/IngredientsController.html":{},"injectables/IngredientsService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["nest",{"_index":307,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":353,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"controllers/IngredientsController.html":{},"modules/IngredientsModule.html":{},"injectables/IngredientsService.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":274,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":275,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":133,"title":{},"body":{"injectables/AuthenticationService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"coverage.html":{}}}],["node.js",{"_index":296,"title":{},"body":{"index.html":{}}}],["npm",{"_index":312,"title":{},"body":{"index.html":{}}}],["open",{"_index":332,"title":{},"body":{"index.html":{}}}],["optional",{"_index":81,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"controllers/IngredientsController.html":{},"injectables/IngredientsService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["order",{"_index":212,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"miscellaneous/variables.html":{}}}],["orderby",{"_index":245,"title":{},"body":{"injectables/OrdersService.html":{}}}],["orderdto",{"_index":209,"title":{},"body":{"controllers/OrdersController.html":{}}}],["orders",{"_index":196,"title":{},"body":{"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{}}}],["orders.axios",{"_index":228,"title":{},"body":{"modules/OrdersModule.html":{}}}],["orders.controller",{"_index":226,"title":{},"body":{"modules/OrdersModule.html":{}}}],["orders.service",{"_index":214,"title":{},"body":{"controllers/OrdersController.html":{},"modules/OrdersModule.html":{}}}],["orders/orders.module",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["ordersaxios",{"_index":227,"title":{},"body":{"modules/OrdersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["orderscontroller",{"_index":194,"title":{"controllers/OrdersController.html":{}},"body":{"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"coverage.html":{}}}],["ordersmodule",{"_index":43,"title":{"modules/OrdersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OrdersModule.html":{},"modules.html":{},"overview.html":{}}}],["ordersservice",{"_index":213,"title":{"injectables/OrdersService.html":{}},"body":{"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"coverage.html":{},"overview.html":{}}}],["out",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/IngredientsModule.html":{},"modules/OrdersModule.html":{},"overview.html":{}}}],["overview",{"_index":360,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":272,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":164,"title":{},"body":{"controllers/IngredientsController.html":{},"injectables/IngredientsService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["parameters",{"_index":79,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"controllers/IngredientsController.html":{},"injectables/IngredientsService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["params",{"_index":190,"title":{},"body":{"injectables/IngredientsService.html":{},"injectables/OrdersService.html":{}}}],["password",{"_index":65,"title":{},"body":{"interfaces/AuthBody.html":{}}}],["please",{"_index":341,"title":{},"body":{"index.html":{}}}],["post",{"_index":88,"title":{},"body":{"controllers/AuthenticationController.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["post('signin",{"_index":77,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["post('signup",{"_index":85,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["prefix",{"_index":71,"title":{},"body":{"controllers/AuthenticationController.html":{},"controllers/IngredientsController.html":{},"controllers/OrdersController.html":{}}}],["private",{"_index":95,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"controllers/IngredientsController.html":{},"injectables/IngredientsService.html":{},"injectables/OrdersService.html":{}}}],["production",{"_index":321,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":295,"title":{},"body":{"index.html":{}}}],["project",{"_index":333,"title":{},"body":{"index.html":{}}}],["promise",{"_index":83,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"injectables/OrdersService.html":{}}}],["properties",{"_index":63,"title":{},"body":{"interfaces/AuthBody.html":{}}}],["provide",{"_index":108,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/IngredientsModule.html":{},"modules/OrdersModule.html":{}}}],["providers",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/IngredientsModule.html":{},"modules/OrdersModule.html":{},"overview.html":{}}}],["public",{"_index":73,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{}}}],["read",{"_index":342,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"controllers/IngredientsController.html":{},"injectables/IngredientsService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["reflect",{"_index":278,"title":{},"body":{"dependencies.html":{}}}],["related",{"_index":148,"title":{},"body":{"controllers/IngredientsController.html":{},"injectables/IngredientsService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"miscellaneous/variables.html":{}}}],["repository",{"_index":309,"title":{},"body":{"index.html":{}}}],["req",{"_index":157,"title":{},"body":{"controllers/IngredientsController.html":{},"controllers/OrdersController.html":{}}}],["request",{"_index":152,"title":{},"body":{"controllers/IngredientsController.html":{},"controllers/OrdersController.html":{}}}],["request.body.userid",{"_index":220,"title":{},"body":{"controllers/OrdersController.html":{}}}],["requests",{"_index":155,"title":{},"body":{"controllers/IngredientsController.html":{},"controllers/OrdersController.html":{}}}],["reset",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/IngredientsModule.html":{},"modules/OrdersModule.html":{},"overview.html":{}}}],["response.data",{"_index":129,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/OrdersService.html":{}}}],["responsible",{"_index":144,"title":{},"body":{"controllers/IngredientsController.html":{},"injectables/IngredientsService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["result",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/AuthBody.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"controllers/IngredientsController.html":{},"modules/IngredientsModule.html":{},"injectables/IngredientsService.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["result.data",{"_index":193,"title":{},"body":{"injectables/IngredientsService.html":{}}}],["results",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/AuthBody.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"controllers/IngredientsController.html":{},"modules/IngredientsModule.html":{},"injectables/IngredientsService.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"controllers/IngredientsController.html":{},"injectables/IngredientsService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"controllers/IngredientsController.html":{},"injectables/IngredientsService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["returnsecuretoken",{"_index":66,"title":{},"body":{"interfaces/AuthBody.html":{}}}],["rimraf",{"_index":281,"title":{},"body":{"dependencies.html":{}}}],["routes",{"_index":147,"title":{},"body":{"controllers/IngredientsController.html":{},"controllers/OrdersController.html":{}}}],["run",{"_index":316,"title":{},"body":{"index.html":{}}}],["running",{"_index":314,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":283,"title":{},"body":{"dependencies.html":{}}}],["save",{"_index":239,"title":{},"body":{"injectables/OrdersService.html":{}}}],["saveorder",{"_index":199,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["saveorder(@req",{"_index":221,"title":{},"body":{"controllers/OrdersController.html":{}}}],["saveorder(authenticationtoken",{"_index":237,"title":{},"body":{"injectables/OrdersService.html":{}}}],["saveorder(request",{"_index":208,"title":{},"body":{"controllers/OrdersController.html":{}}}],["scalable",{"_index":300,"title":{},"body":{"index.html":{}}}],["server",{"_index":301,"title":{},"body":{"index.html":{}}}],["side",{"_index":302,"title":{},"body":{"index.html":{}}}],["signin",{"_index":74,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{}}}],["signin(@body",{"_index":98,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["signin(signinbody",{"_index":76,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{}}}],["signinbody",{"_index":82,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{}}}],["signup",{"_index":75,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{}}}],["signup(@body",{"_index":96,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["signup(signupbody",{"_index":84,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{}}}],["signupbody",{"_index":87,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/AuthBody.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"controllers/IngredientsController.html":{},"modules/IngredientsModule.html":{},"injectables/IngredientsService.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"index.html":{}}}],["specific",{"_index":206,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["sponsors",{"_index":336,"title":{},"body":{"index.html":{}}}],["src/.../authentication.axios.ts",{"_index":365,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../ingredients.axios.ts",{"_index":367,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":292,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../orders.axios.ts",{"_index":368,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../tokens.ts",{"_index":366,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":55,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":56,"title":{},"body":{"injectables/AppService.html":{}}}],["src/authentication/authentication.axios.ts",{"_index":253,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/authentication/authentication.controller.ts",{"_index":70,"title":{},"body":{"controllers/AuthenticationController.html":{},"coverage.html":{}}}],["src/authentication/authentication.controller.ts:13",{"_index":86,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["src/authentication/authentication.controller.ts:18",{"_index":78,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["src/authentication/authentication.module.ts",{"_index":102,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["src/authentication/authentication.service.ts",{"_index":110,"title":{},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{}}}],["src/authentication/authentication.service.ts:14",{"_index":121,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/authentication/authentication.service.ts:20",{"_index":120,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/authentication/authentication.service.ts:26",{"_index":117,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/authentication/authentication.service.ts:8",{"_index":114,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/authentication/authentication.types.ts",{"_index":62,"title":{},"body":{"interfaces/AuthBody.html":{},"coverage.html":{}}}],["src/core/core.module.ts",{"_index":139,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/core/tokens.ts",{"_index":259,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/ingredients/ingredients.axios.ts",{"_index":260,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/ingredients/ingredients.controller.ts",{"_index":141,"title":{},"body":{"controllers/IngredientsController.html":{},"coverage.html":{}}}],["src/ingredients/ingredients.controller.ts:33",{"_index":153,"title":{},"body":{"controllers/IngredientsController.html":{}}}],["src/ingredients/ingredients.module.ts",{"_index":170,"title":{},"body":{"modules/IngredientsModule.html":{}}}],["src/ingredients/ingredients.service.ts",{"_index":177,"title":{},"body":{"injectables/IngredientsService.html":{},"coverage.html":{}}}],["src/ingredients/ingredients.service.ts:12",{"_index":184,"title":{},"body":{"injectables/IngredientsService.html":{}}}],["src/ingredients/ingredients.service.ts:32",{"_index":186,"title":{},"body":{"injectables/IngredientsService.html":{}}}],["src/main.ts",{"_index":265,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/orders/orders.axios.ts",{"_index":267,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/orders/orders.controller.ts",{"_index":195,"title":{},"body":{"controllers/OrdersController.html":{},"coverage.html":{}}}],["src/orders/orders.controller.ts:23",{"_index":202,"title":{},"body":{"controllers/OrdersController.html":{}}}],["src/orders/orders.controller.ts:35",{"_index":205,"title":{},"body":{"controllers/OrdersController.html":{}}}],["src/orders/orders.controller.ts:48",{"_index":210,"title":{},"body":{"controllers/OrdersController.html":{}}}],["src/orders/orders.module.ts",{"_index":225,"title":{},"body":{"modules/OrdersModule.html":{}}}],["src/orders/orders.service.ts",{"_index":229,"title":{},"body":{"injectables/OrdersService.html":{},"coverage.html":{}}}],["src/orders/orders.service.ts:12",{"_index":232,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/orders/orders.service.ts:27",{"_index":233,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/orders/orders.service.ts:43",{"_index":236,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/orders/orders.service.ts:65",{"_index":238,"title":{},"body":{"injectables/OrdersService.html":{}}}],["start",{"_index":317,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":320,"title":{},"body":{"index.html":{}}}],["start:prod",{"_index":322,"title":{},"body":{"index.html":{}}}],["started",{"_index":294,"title":{"index.html":{}},"body":{}}],["starter",{"_index":308,"title":{},"body":{"index.html":{}}}],["statements",{"_index":250,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":345,"title":{},"body":{"index.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/AuthBody.html":{},"injectables/IngredientsService.html":{},"injectables/OrdersService.html":{},"miscellaneous/variables.html":{}}}],["submitting",{"_index":211,"title":{},"body":{"controllers/OrdersController.html":{}}}],["support",{"_index":329,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":356,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":285,"title":{},"body":{"dependencies.html":{}}}],["table",{"_index":271,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":270,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":323,"title":{},"body":{"index.html":{}}}],["test:cov",{"_index":328,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":327,"title":{},"body":{"index.html":{}}}],["tests",{"_index":325,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":335,"title":{},"body":{"index.html":{}}}],["then((response",{"_index":242,"title":{},"body":{"injectables/OrdersService.html":{}}}],["then(response",{"_index":128,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["then(result",{"_index":192,"title":{},"body":{"injectables/IngredientsService.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authenticaiton.post(`/signupnewuser?key=${config.api_key",{"_index":127,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.authenticaiton.post(`/verifypassword?key=${config.api_key",{"_index":131,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.authentication.signin(signinbody",{"_index":99,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["this.authentication.signup(signupbody",{"_index":97,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["this.axios",{"_index":241,"title":{},"body":{"injectables/OrdersService.html":{}}}],["this.ingredients.get",{"_index":189,"title":{},"body":{"injectables/IngredientsService.html":{}}}],["this.ingredients.getall(request.query.auth",{"_index":167,"title":{},"body":{"controllers/IngredientsController.html":{}}}],["this.orders.getall(request.query.auth",{"_index":217,"title":{},"body":{"controllers/OrdersController.html":{}}}],["this.orders.getbyuser(request.query.auth",{"_index":219,"title":{},"body":{"controllers/OrdersController.html":{}}}],["this.orders.saveorder(request.query.auth",{"_index":222,"title":{},"body":{"controllers/OrdersController.html":{}}}],["throw",{"_index":132,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/OrdersService.html":{}}}],["touch",{"_index":346,"title":{},"body":{"index.html":{}}}],["twitter",{"_index":352,"title":{},"body":{"index.html":{}}}],["type",{"_index":67,"title":{},"body":{"interfaces/AuthBody.html":{},"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"controllers/IngredientsController.html":{},"injectables/IngredientsService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":288,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["ui",{"_index":286,"title":{},"body":{"dependencies.html":{}}}],["unit",{"_index":324,"title":{},"body":{"index.html":{}}}],["user",{"_index":207,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["userid",{"_index":235,"title":{},"body":{"injectables/OrdersService.html":{}}}],["usevalue",{"_index":109,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/IngredientsModule.html":{},"modules/OrdersModule.html":{}}}],["value",{"_index":370,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":254,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":364,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":119,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["watch",{"_index":318,"title":{},"body":{"index.html":{}}}],["website",{"_index":350,"title":{},"body":{"index.html":{}}}],["world",{"_index":58,"title":{},"body":{"injectables/AppService.html":{}}}],["you'd",{"_index":339,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/IngredientsModule.html":{},"modules/OrdersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthenticationModule\n\nAuthenticationModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthenticationModule->AppModule\n\n\n\n\n\nIngredientsModule\n\nIngredientsModule\n\nAppModule -->\n\nIngredientsModule->AppModule\n\n\n\n\n\nOrdersModule\n\nOrdersModule\n\nAppModule -->\n\nOrdersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthenticationModule\n                        \n                        \n                            IngredientsModule\n                        \n                        \n                            OrdersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { OrdersModule } from './orders/orders.module';\nimport { IngredientsModule } from './ingredients/ingredients.module';\nimport { AuthenticationModule } from './authentication/authentication.module';\n\n@Module({\n  imports: [\n    OrdersModule,\n    IngredientsModule,\n    AuthenticationModule,\n  ],\n  controllers: [\n    AppController,\n  ],\n  providers: [\n    AppService,\n  ],\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthBody.html":{"url":"interfaces/AuthBody.html","title":"interface - AuthBody","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AuthBody\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authentication/authentication.types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        password\n                                \n                                \n                                        returnSecureToken\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        returnSecureToken\n                                    \n                                \n                                \n                                    \n                                        returnSecureToken:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AuthBody {\n  email: string;\n  password: string;\n  returnSecureToken: boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthenticationController.html":{"url":"controllers/AuthenticationController.html","title":"controller - AuthenticationController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthenticationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authentication/authentication.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                authentication\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                signIn\n                            \n                            \n                                    Public\n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            signIn\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    signIn(signInBody: AuthBody)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('signin')\n                \n            \n\n            \n                \n                    Defined in src/authentication/authentication.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signInBody\n                                    \n                                                AuthBody\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            signUp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    signUp(signUpBody: AuthBody)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('signup')\n                \n            \n\n            \n                \n                    Defined in src/authentication/authentication.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signUpBody\n                                    \n                                                AuthBody\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Body } from '@nestjs/common';\nimport { AuthBody } from './authentication.types';\nimport { AuthenticationService } from './authentication.service';\n\n@Controller('authentication')\nexport class AuthenticationController {\n  constructor(\n    private readonly authentication: AuthenticationService,\n  ) {\n  }\n\n  @Post('signup')\n  public signUp(@Body() signUpBody: AuthBody): Promise {\n    return this.authentication.signUp(signUpBody);\n  }\n\n  @Post('signin')\n  public signIn(@Body() signInBody: AuthBody): Promise {\n    return this.authentication.signIn(signInBody);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthenticationModule.html":{"url":"modules/AuthenticationModule.html","title":"module - AuthenticationModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthenticationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthenticationModule\n\n\n\ncluster_AuthenticationModule_providers\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\n\n\nAuthenticationModule\n\nAuthenticationModule\n\nAuthenticationModule -->\n\nAuthenticationService->AuthenticationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/authentication/authentication.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthenticationService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthenticationController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthenticationController } from './authentication.controller';\nimport { AuthenticationService } from './authentication.service';\nimport { AXIOS } from '../core/tokens';\nimport { AuthenticationAxios } from './authentication.axios';\n\n@Module({\n  controllers: [AuthenticationController],\n  providers: [\n    AuthenticationService,\n    {\n      provide: AXIOS,\n      useValue: AuthenticationAxios,\n    },\n  ],\n})\nexport class AuthenticationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authentication/authentication.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                    Public\n                                signIn\n                            \n                            \n                                    Public\n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authenticaiton: AxiosInstance)\n                    \n                \n                        \n                            \n                                Defined in src/authentication/authentication.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authenticaiton\n                                                  \n                                                        \n                                                                    AxiosInstance\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error)\n                \n            \n\n\n            \n                \n                    Defined in src/authentication/authentication.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            signIn\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    signIn(signInBody: AuthBody)\n                \n            \n\n\n            \n                \n                    Defined in src/authentication/authentication.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signInBody\n                                    \n                                                AuthBody\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            signUp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    signUp(signUpBody: AuthBody)\n                \n            \n\n\n            \n                \n                    Defined in src/authentication/authentication.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signUpBody\n                                    \n                                                AuthBody\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject, HttpException } from '@nestjs/common';\nimport { AuthBody } from './authentication.types';\nimport { AXIOS } from '../core/tokens';\nimport { config } from '../../api-config';\nimport { AxiosInstance } from 'axios';\n\n@Injectable()\nexport class AuthenticationService {\n  constructor(\n    @Inject(AXIOS) private readonly authenticaiton: AxiosInstance,\n  ) {\n  }\n\n  public signUp(signUpBody: AuthBody): Promise {\n    return this.authenticaiton.post(`/signupNewUser?key=${config.API_KEY}`, signUpBody)\n      .then(response => response.data)\n      .catch(this.handleError);\n  }\n\n  public signIn(signInBody: AuthBody): Promise {\n    return this.authenticaiton.post(`/verifyPassword?key=${config.API_KEY}`, signInBody)\n      .then(response => response.data)\n      .catch(this.handleError);\n  }\n\n  private handleError(error) {\n    throw new HttpException({\n      ...error.response.data,\n      message: error.message,\n    }, error.response.status);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/core.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\n@Module({})\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/IngredientsController.html":{"url":"controllers/IngredientsController.html","title":"controller - IngredientsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  IngredientsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ingredients/ingredients.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                ingredients\n            \n\n            \n                Description\n            \n            \n                Responsible for defining and handling API routes related to ingrediengs\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAllIngredients\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllIngredients\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllIngredients(request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/ingredients/ingredients.controller.ts:33\n                \n            \n\n\n            \n                \n                    Handles requests for fetching all the ingrediengs\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Req } from '@nestjs/common';\nimport { IngredientsService } from './ingredients.service';\nimport { Request } from 'express';\n\n/**\n * Responsible for defining and handling API routes related to ingrediengs\n *\n * @export\n * @class IngredientsController\n */\n@Controller('ingredients')\nexport class IngredientsController {\n\n  /**\n   * Creates an instance of IngredientsController\n   *\n   * @param {IngredientsService} ingredients\n   * @memberof IngredientsController\n   */\n  constructor(\n    private readonly ingredients: IngredientsService,\n  ) {\n  }\n\n  /**\n   * Handles requests for fetching all the ingrediengs\n   *\n   * @param {Request} request\n   * @returns\n   * @memberof IngredientsController\n   */\n  @Get()\n  getAllIngredients(@Req() request: Request) {\n    return this.ingredients.getAll(request.query.auth);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IngredientsModule.html":{"url":"modules/IngredientsModule.html","title":"module - IngredientsModule","body":"\n                   \n\n\n\n\n    Modules\n    IngredientsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_IngredientsModule\n\n\n\ncluster_IngredientsModule_providers\n\n\n\n\nIngredientsService\n\nIngredientsService\n\n\n\nIngredientsModule\n\nIngredientsModule\n\nIngredientsModule -->\n\nIngredientsService->IngredientsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/ingredients/ingredients.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Aggregates the ingredients functionality of the app.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            IngredientsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            IngredientsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { IngredientsController } from './ingredients.controller';\nimport { IngredientsService } from './ingredients.service';\nimport { AXIOS } from '../core/tokens';\nimport { IngredientsAxios } from './ingredients.axios';\n\n/**\n * Aggregates the ingredients functionality of the app.\n *\n * @export\n * @class IngredientsModule\n */\n@Module({\n  controllers: [\n    IngredientsController,\n  ],\n  providers: [\n    IngredientsService,\n    {\n      provide: AXIOS,\n      useValue: IngredientsAxios,\n    },\n  ],\n})\nexport class IngredientsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IngredientsService.html":{"url":"injectables/IngredientsService.html","title":"injectable - IngredientsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  IngredientsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ingredients/ingredients.service.ts\n        \n\n            \n                Description\n            \n            \n                Responsible for ingredient-related communication with the Firebase API\n\n            \n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ingredients: AxiosInstance)\n                    \n                \n                        \n                            \n                                Defined in src/ingredients/ingredients.service.ts:12\n                            \n                        \n\n                \n                    \n                            Creates an instance of IngredientsService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ingredients\n                                                  \n                                                        \n                                                                    AxiosInstance\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAll\n                        \n                        \n                    \n                \n            \n            \n                \ngetAll(authenticationToken: string)\n                \n            \n\n\n            \n                \n                    Defined in src/ingredients/ingredients.service.ts:32\n                \n            \n\n\n            \n                \n                    Gets all the ingredients\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    authenticationToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@nestjs/common';\nimport { AxiosInstance } from 'axios';\nimport { AXIOS } from '../core/tokens';\n\n/**\n * Responsible for ingredient-related communication with the Firebase API\n *\n * @export\n * @class IngredientsService\n */\n@Injectable()\nexport class IngredientsService {\n\n  /**\n   * Creates an instance of IngredientsService.\n   *\n   * @param {AxiosInstance} ingredients\n   * @memberof IngredientsService\n   */\n  constructor(\n    @Inject(AXIOS) private readonly ingredients: AxiosInstance,\n  ) {\n  }\n\n  /**\n   * Gets all the ingredients\n   *\n   * @param {string} authenticationToken\n   * @returns\n   * @memberof IngredientsService\n   */\n  getAll(authenticationToken: string) {\n    return this.ingredients.get('', { params: { auth: authenticationToken } })\n      .then(result => result.data);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrdersController.html":{"url":"controllers/OrdersController.html","title":"controller - OrdersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrdersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orders/orders.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                orders\n            \n\n            \n                Description\n            \n            \n                Responsible for defining and handling API routes related to orders\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAllOrders\n                            \n                            \n                                getOrdersByUser\n                            \n                            \n                                saveOrder\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllOrders\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllOrders(request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('all')\n                \n            \n\n            \n                \n                    Defined in src/orders/orders.controller.ts:23\n                \n            \n\n\n            \n                \n                    Handles requests for fetching all the orders\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getOrdersByUser\n                        \n                        \n                    \n                \n            \n            \n                \ngetOrdersByUser(request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('byUser')\n                \n            \n\n            \n                \n                    Defined in src/orders/orders.controller.ts:35\n                \n            \n\n\n            \n                \n                    Handles requests for fetching orders for a specific user\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveOrder\n                        \n                        \n                    \n                \n            \n            \n                \nsaveOrder(request: Request, orderDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/orders/orders.controller.ts:48\n                \n            \n\n\n            \n                \n                    Handles requests for submitting a new order\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    orderDto\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Req } from '@nestjs/common';\nimport { OrdersService } from './orders.service';\nimport { Request } from 'express';\n\n/**\n * Responsible for defining and handling API routes related to orders\n *\n * @export\n * @class OrdersController\n */\n@Controller('orders')\nexport class OrdersController {\n  constructor(private readonly orders: OrdersService) {}\n\n  /**\n   * Handles requests for fetching all the orders\n   *\n   * @param {Request} request\n   * @returns\n   * @memberof OrdersController\n   */\n  @Get('all')\n  getAllOrders(@Req() request: Request) {\n    return this.orders.getAll(request.query.auth);\n  }\n\n  /**\n   * Handles requests for fetching orders for a specific user\n   *\n   * @param {Request} request\n   * @returns\n   * @memberof OrdersController\n   */\n  @Get('byUser')\n  getOrdersByUser(@Req() request: Request) {\n    return this.orders.getByUser(request.query.auth, request.body.userId);\n  }\n\n  /**\n   * Handles requests for submitting a new order\n   *\n   * @param {Request} request\n   * @param {*} orderDto\n   * @returns\n   * @memberof OrdersController\n   */\n  @Post()\n  saveOrder(@Req() request: Request, @Body() orderDto) {\n    return this.orders.saveOrder(request.query.auth, orderDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrdersModule.html":{"url":"modules/OrdersModule.html","title":"module - OrdersModule","body":"\n                   \n\n\n\n\n    Modules\n    OrdersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OrdersModule\n\n\n\ncluster_OrdersModule_providers\n\n\n\n\nOrdersService\n\nOrdersService\n\n\n\nOrdersModule\n\nOrdersModule\n\nOrdersModule -->\n\nOrdersService->OrdersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/orders/orders.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Aggregates the orders functionality of the app.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OrdersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OrdersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { OrdersController } from './orders.controller';\nimport { OrdersService } from './orders.service';\nimport { OrdersAxios } from './orders.axios';\nimport { AXIOS } from '../core/tokens';\n\n/**\n * Aggregates the orders functionality of the app.\n *\n * @export\n * @class OrdersModule\n */\n@Module({\n  controllers: [\n    OrdersController,\n  ],\n  providers: [\n    OrdersService,\n    {\n      provide: AXIOS,\n      useValue: OrdersAxios,\n    },\n  ],\n})\nexport class OrdersModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrdersService.html":{"url":"injectables/OrdersService.html","title":"injectable - OrdersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  OrdersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orders/orders.service.ts\n        \n\n            \n                Description\n            \n            \n                Responsible for order-related communication with the Firebase API\n\n            \n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAll\n                            \n                            \n                                getByUser\n                            \n                            \n                                saveOrder\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(axios: AxiosInstance)\n                    \n                \n                        \n                            \n                                Defined in src/orders/orders.service.ts:12\n                            \n                        \n\n                \n                    \n                            Creates an instance of OrdersService\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        axios\n                                                  \n                                                        \n                                                                    AxiosInstance\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAll\n                        \n                        \n                    \n                \n            \n            \n                \ngetAll(authenticationToken: string)\n                \n            \n\n\n            \n                \n                    Defined in src/orders/orders.service.ts:27\n                \n            \n\n\n            \n                \n                    Get all the orders\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    authenticationToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getByUser\n                        \n                        \n                    \n                \n            \n            \n                \ngetByUser(authenticationToken: string, userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/orders/orders.service.ts:43\n                \n            \n\n\n            \n                \n                    Get the orders for a specific user\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    authenticationToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveOrder\n                        \n                        \n                    \n                \n            \n            \n                \nsaveOrder(authenticationToken: string, order: any)\n                \n            \n\n\n            \n                \n                    Defined in src/orders/orders.service.ts:65\n                \n            \n\n\n            \n                \n                    Save a new order\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    authenticationToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    order\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject, HttpException } from '@nestjs/common';\nimport { AXIOS } from '../core/tokens';\nimport { AxiosInstance } from 'axios';\n\n/**\n * Responsible for order-related communication with the Firebase API\n *\n * @export\n * @class OrdersService\n */\n@Injectable()\nexport class OrdersService {\n\n  /**\n   * Creates an instance of OrdersService\n   * @param {AxiosInstance} axios\n   * @memberof OrdersService\n   */\n  constructor(@Inject(AXIOS) private readonly axios: AxiosInstance) {}\n\n  /**\n   * Get all the orders\n   * @param {string} authenticationToken\n   * @returns {Promise}\n   * @memberof OrdersService\n   */\n  getAll(authenticationToken: string): Promise {\n    return this.axios\n      .get('', { params: { auth: authenticationToken } })\n      .then((response) => response.data)\n      .catch((error) => {\n        throw new HttpException(error.message, error.response.status);\n      });\n  }\n\n  /**\n   * Get the orders for a specific user\n   * @param {string} authenticationToken\n   * @param {string} userId\n   * @returns {Promise}\n   * @memberof OrdersService\n   */\n  getByUser(authenticationToken: string, userId: string): Promise {\n    return this.axios\n      .get('', {\n        params: {\n          auth: authenticationToken,\n          orderBy: 'userId',\n          equalTo: userId,\n      },\n    })\n      .then((response) => response.data)\n      .catch((error) => {\n        throw new HttpException(error.message, error.response.status);\n      });\n  }\n\n  /**\n   * Save a new order\n   * @param {string} authenticationToken\n   * @param {*} order\n   * @returns {Promise}\n   * @memberof OrdersService\n   */\n  saveOrder(authenticationToken: string, order: any): Promise {\n    return this.axios\n      .post('', order, { params: { auth: authenticationToken } })\n      .then((response) => response.data)\n      .catch((error) => {\n        throw new HttpException(error.message, error.response.status);\n      });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/authentication/authentication.axios.ts\n            \n            variable\n            AuthenticationAxios\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/authentication/authentication.controller.ts\n            \n            controller\n            AuthenticationController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/authentication/authentication.service.ts\n            \n            injectable\n            AuthenticationService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/authentication/authentication.types.ts\n            \n            interface\n            AuthBody\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/core/tokens.ts\n            \n            variable\n            AXIOS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/ingredients/ingredients.axios.ts\n            \n            variable\n            IngredientsAxios\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/ingredients/ingredients.controller.ts\n            \n            controller\n            IngredientsController\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/ingredients/ingredients.service.ts\n            \n            injectable\n            IngredientsService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/orders/orders.axios.ts\n            \n            variable\n            OrdersAxios\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/orders/orders.controller.ts\n            \n            controller\n            OrdersController\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/orders/orders.service.ts\n            \n            injectable\n            OrdersService\n            \n                100 %\n                (5/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^5.4.0\n        \n            @nestjs/core : ^5.4.0\n        \n            @nestjs/swagger : ^3.0.2\n        \n            axios : ^0.18.0\n        \n            reflect-metadata : ^0.1.12\n        \n            rimraf : ^2.6.2\n        \n            rxjs : ^6.2.2\n        \n            swagger-ui-express : ^4.0.5\n        \n            typescript : ^3.0.1\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications, heavily inspired by Angular.\n    \n\n\n\n\n\n\n\n\n\n  \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nbash\n$ npm install\nRunning the app\n```bash\ndevelopment\n$ npm run start\nwatch mode\n$ npm run start:dev\nproduction mode\n$ npm run start:prod\n```\nTest\n```bash\nunit tests\n$ npm run test\ne2e tests\n$ npm run test:e2e\ntest coverage\n$ npm run test:cov\n```\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\n  Nest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthenticationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IngredientsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrdersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthenticationModule\n\n\n\ncluster_AuthenticationModule_providers\n\n\n\ncluster_IngredientsModule\n\n\n\ncluster_IngredientsModule_providers\n\n\n\ncluster_OrdersModule\n\n\n\ncluster_OrdersModule_providers\n\n\n\n\nAuthenticationModule\n\nAuthenticationModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthenticationModule->AppModule\n\n\n\n\n\nIngredientsModule\n\nIngredientsModule\n\nAppModule -->\n\nIngredientsModule->AppModule\n\n\n\n\n\nOrdersModule\n\nOrdersModule\n\nAppModule -->\n\nOrdersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nAuthenticationModule -->\n\nAuthenticationService->AuthenticationModule\n\n\n\n\n\nIngredientsService\n\nIngredientsService\n\nIngredientsModule -->\n\nIngredientsService->IngredientsModule\n\n\n\n\n\nOrdersService\n\nOrdersService\n\nOrdersModule -->\n\nOrdersService->OrdersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthenticationAxios   (src/.../authentication.axios.ts)\n                        \n                        \n                            AXIOS   (src/.../tokens.ts)\n                        \n                        \n                            IngredientsAxios   (src/.../ingredients.axios.ts)\n                        \n                        \n                            OrdersAxios   (src/.../orders.axios.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/authentication/authentication.axios.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AuthenticationAxios\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : axios.create({\n  baseURL: `https://www.googleapis.com/identitytoolkit/v3/relyingparty`,\n})\n                        \n                    \n\n\n            \n        \n\n    src/core/tokens.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AXIOS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'AXIOS'\n                        \n                    \n\n\n            \n        \n\n    src/ingredients/ingredients.axios.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            IngredientsAxios\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : axios.create({\n  baseURL: `${config.API_BASE_URL}/ingredients.json`,\n})\n                        \n                    \n\n                \n                    \n                        Axios instance, configured for ingredieng-related communication with Firebase.\n\n                    \n                \n\n            \n        \n\n    src/orders/orders.axios.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            OrdersAxios\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : axios.create({\n  baseURL: `${config.API_BASE_URL}/orders.json`,\n})\n                        \n                    \n\n                \n                    \n                        Axios instance, configured for order-related communication with Firebase.\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
